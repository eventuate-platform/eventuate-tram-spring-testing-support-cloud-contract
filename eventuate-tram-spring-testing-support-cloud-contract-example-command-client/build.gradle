apply plugin: 'org.springframework.boot'
apply plugin: 'org.springframework.cloud.contract'
apply plugin: 'maven-publish'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "io.eventuate.tram.core:eventuate-tram-spring-commands-starter:$eventuateTramVersion"
    implementation "io.eventuate.tram.core:eventuate-tram-spring-jdbc-kafka:$eventuateTramVersion"


    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"


    contractTestImplementation project(":eventuate-tram-spring-testing-support-cloud-contract")
    contractTestImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"
    testImplementation "io.eventuate.util:eventuate-util-test:$eventuateUtilVersion"

}


contractTest {
    useJUnitPlatform()
    systemProperty "stubrunner.repositoryRoot", contractRepoUrl

}

ext {
    set('contractGroupId', project.group)
    set('contractArtifactId', "eventuate-tram-spring-testing-support-cloud-contract-example-command-service")
    set("contractArtifactVersion", project.version)
}

contractTest.dependsOn(":$contractArtifactId:publishStubsPublicationToStubsRepository")


contracts {

    contractDependency {
        groupId = contractGroupId
        artifactId = contractArtifactId
        classifier = "stubs"
        version = contractArtifactVersion
    }

    contractsMode = "REMOTE"

    contractRepository {
        repositoryUrl = contractRepoUrl
    }

    contractsPath = "META-INF/${contractGroupId}/$contractArtifactId/${contractArtifactVersion}/contracts/command-client/commands"

    testFramework = "JUNIT5"
    baseClassForTests = "io.eventuate.tram.commandclient.BaseForCommandServiceTest"

    failOnNoContracts = true

}

copyContracts.dependsOn(":$contractArtifactId:publishStubsPublicationToStubsRepository")

contractTest {
    useJUnitPlatform()
}
